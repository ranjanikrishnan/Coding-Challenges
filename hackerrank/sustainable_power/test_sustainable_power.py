import unittest
from hackerrank.sustainable_power.sustainable_power import findMaximumSustainableClusterSize


class TestParcels(unittest.TestCase):
    def test_parcels(self):
        processingPower = [203, 105, 530, 3567, 1092, 3]
        bootingPower = [992, 1453, 854, 152, 2377, 4]
        powerMax = 15
        result = findMaximumSustainableClusterSize(processingPower, bootingPower, powerMax)
        self.assertEqual(result, 1)


# processingPower [345, 486, 435, 435, 402, 453, 320, 439, 405, 329, 254, 220, 368, 308, 412, 369, 426, 359, 490, 396, 277, 243, 376, 261, 223, 373, 367, 463, 379, 473, 412, 296, 286, 223, 382, 408, 390, 420, 465, 260, 284, 205, 271, 208, 233, 242, 235, 343, 447, 373, 210, 416, 207, 389, 218, 431, 202, 452, 405, 214, 238, 376, 233, 351, 326, 279, 247, 488, 285, 228, 480, 283, 226, 261, 421, 404, 426, 492, 373, 474, 282, 471, 212, 461, 230, 291, 364, 299, 226, 222, 499, 232, 396, 252, 414, 384, 463, 222, 464, 464, 344, 328, 219, 453, 263, 223, 454, 369, 393, 229, 418, 238, 314, 321, 286, 430, 243, 377, 224, 249, 376, 251, 214, 228, 395, 379, 484, 412, 435, 215, 452, 259, 467, 367, 376, 399, 344, 368, 202, 279, 453, 228, 466, 267, 226, 421, 415, 381, 220, 368, 491, 211, 219, 454, 370, 301, 317, 201, 475, 213, 418, 233, 378, 209, 331, 461, 200, 246, 209, 453, 436, 411, 390, 296, 494, 338, 464, 496, 367, 405, 362, 427, 408, 285, 346, 278, 278, 405, 370, 256, 307]
# bootingPower [1980, 1720, 1081, 1599, 1659, 1754, 1490, 1530, 1114, 1649, 1961, 1387, 1628, 1503, 1050, 1991, 1131, 1841, 1253, 1218, 1386, 1022, 1975, 1974, 1019, 1278, 1977, 1539, 1617, 1253, 1661, 1477, 1830, 1930, 1276, 1660, 1714, 1890, 1728, 1579, 1761, 1091, 1528, 1263, 1920, 1753, 1429, 1722, 1410, 1894, 1993, 1486, 1636, 1629, 1856, 1076, 1708, 1104, 1194, 1030, 1230, 1292, 1595, 1786, 1495, 1343, 1244, 1168, 1791, 1036, 1316, 1216, 1657, 1615, 1363, 1172, 1829, 1146, 1384, 1975, 1240, 1563, 1632, 1194, 1862, 1005, 1079, 1721, 1615, 1414, 1182, 1813, 1160, 1601, 1639, 1480, 1300, 1287, 1075, 1681, 1010, 1928, 1046, 1365, 1690, 1298, 1267, 1427, 1098, 1210, 1890, 1375, 1685, 1690, 1691, 1977, 1621, 1384, 1821, 1148, 1504, 1069, 1919, 1094, 1277, 1234, 1661, 1278, 1083, 1055, 1821, 1770, 1502, 1512, 1668, 1174, 1745, 1838, 1376, 1964, 1694, 1197, 1379, 1552, 1856, 1242, 1658, 1783, 1081, 1576, 1880, 1301, 1255, 1941, 1095, 1096, 1936, 1898, 1459, 1141, 1686, 1793, 1711, 1254, 1731, 1735, 1411, 1029, 1095, 1221, 1129, 1101, 1817, 1406, 1728, 1482, 1286, 1797, 1571, 1549, 1080, 1840, 1202, 1376, 1314, 1813, 1358, 1882, 1923, 1984, 1614]
# powerMax 100000000000000
# processingPower [5]
# bootingPower [5]
# powerMax 15

